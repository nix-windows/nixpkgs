diff --git a/dist/IO/poll.h b/dist/IO/poll.h
index 08de250..e832ee5 100644
--- a/dist/IO/poll.h
+++ b/dist/IO/poll.h
@@ -11,7 +11,7 @@
 #  define POLL_H
 
 #if (defined(HAS_POLL) && defined(I_POLL)) || defined(POLLWRBAND)
-#  include <poll.h>
+
 #elif (defined(HAS_POLL) && defined(I_SYS_POLL))
 #  include <sys/poll.h>
 #else
diff --git a/cpan/Socket/Socket.xs b/cpan/Socket/Socket.xs
index e46c93e..a8bde05 100644
--- a/cpan/Socket/Socket.xs
+++ b/cpan/Socket/Socket.xs
@@ -98,7 +98,7 @@ struct sockaddr_un
 
 #endif
 
-static int inet_pton(int af, const char *src, void *dst)
+static int inet_pton_(int af, const char *src, void *dst)
 {
   struct sockaddr_storage ss;
   int size = sizeof(ss);
@@ -120,7 +120,7 @@ static int inet_pton(int af, const char *src, void *dst)
   }
 }
 
-static const char *inet_ntop(int af, const void *src, char *dst, socklen_t size)
+static const char *inet_ntop_(int af, const void *src, char *dst, socklen_t size)
 {
   struct sockaddr_storage ss;
   unsigned long s = size;
@@ -1177,7 +1177,7 @@ inet_ntop(af, ip_address_sv)
 	else {
 	    Copy(ip_address, &addr, sizeof addr, char);
 	}
-	inet_ntop(af, &addr, str, sizeof str);
+	inet_ntop_(af, &addr, str, sizeof str);
 
 	ST(0) = sv_2mortal(newSVpvn(str, strlen(str)));
 #else
@@ -1218,7 +1218,7 @@ inet_pton(af, host)
 #endif
 		      "Socket::inet_pton", af);
 	}
-	ok = (*host != '\0') && inet_pton(af, host, &ip_address);
+	ok = (*host != '\0') && inet_pton_(af, host, &ip_address);
 
 	ST(0) = sv_newmortal();
 	if (ok) {
